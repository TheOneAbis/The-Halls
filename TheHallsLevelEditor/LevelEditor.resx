<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>