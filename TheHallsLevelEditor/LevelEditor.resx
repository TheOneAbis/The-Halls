<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        tlP2009/AyC+KuHV77puAAAAAElFTkSuQmCC
</value>
  </data>
</root>